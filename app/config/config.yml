imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    assets:
        json_manifest_path: '%kernel.project_dir%/web/build/manifest.json'
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_theme:
        - 'bootstrap_4_layout.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            json: Sonata\Doctrine\Types\JsonType
            length: MidnightLuke\PhpUnitsOfMeasureBundle\Doctrine\Types\LengthType
            mass: MidnightLuke\PhpUnitsOfMeasureBundle\Doctrine\Types\MassType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        second_level_cache:
            enabled: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# FOS User Bundle Configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Bkstg\FOSUserBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

sonata_core:
    form:
        mapping:
            enabled: false

# Sonata Block Bundle Configuration
sonata_block:
    default_contexts: [sonata_page_bundle]
    blocks:
        Bkstg\NoticeBoardBundle\Block\PostFormBlock: ~
        Bkstg\NoticeBoardBundle\Block\ReplyFormBlock: ~
        Bkstg\TimelineBundle\Block\NotificationsBlock: ~

sonata_media:
    default_context: default
    db_driver: doctrine_orm
    class:
        media: Bkstg\MediaBundle\Entity\Media
        gallery: Bkstg\MediaBundle\Entity\Gallery
        gallery_has_media: Bkstg\MediaBundle\Entity\GalleryHasMedia
    providers:
        image:
            resizer: sonata.media.resizer.square
    contexts:
        default:
            download:
                strategy: sonata.media.security.connected_strategy
                mode: http
            providers:
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo
            formats:
                square: { width: 256, height: 256, quality: 90}
                small: { width: 256 , quality: 90}
                big:   { width: 512 , quality: 90}
    cdn:
        server: ~
    filesystem:
        local:
            directory: "%kernel.root_dir%/../var/uploads/media"
            create: true

knp_paginator:
    template:
        pagination: 'KnpPaginatorBundle:Pagination:twitter_bootstrap_v4_pagination.html.twig'
        sortable: 'BkstgCoreBundle:Partials:sortable-link.html.twig'

spy_timeline:
    filters:
        data_hydrator:
            priority: 20
            service: spy_timeline.filter.data_hydrator
            locators:
                - spy_timeline.filter.data_hydrator.locator.doctrine_orm
    drivers:
        orm:
            object_manager: doctrine.orm.entity_manager
            classes:
                query_builder: ~
                timeline:  Bkstg\TimelineBundle\Entity\Timeline
                action:    Bkstg\TimelineBundle\Entity\Action
                component: Bkstg\TimelineBundle\Entity\Component
                action_component: Bkstg\TimelineBundle\Entity\ActionComponent
    notifiers:
        - Bkstg\TimelineBundle\Notifier\UnreadNotificationManager
    render:
        path:     ':Timeline'
        fallback: 'BkstgTimelineBundle:Timeline:default.html.twig'
        resources:
            - 'BkstgTimelineBundle:Timeline:components.html.twig'
    resolve_component:
        resolver: spy_timeline.resolve_component.doctrine
    paginator: spy_timeline.paginator.knp

liip_monitor:
    enable_controller: true
    checks:
        php_extensions: [apc, xdebug]

fos_elastica:
    clients:
        default:
            host: '%elastica_host%'
            port: '%elastica_port%'
    serializer:
        serializer: jms_serializer
    indexes:
        app:
            finder: ~
            index_name: app_%kernel.environment%
            types:
                user:
                    persistence:
                        model: Bkstg\FOSUserBundle\Entity\User
                production:
                    persistence:
                        model: Bkstg\CoreBundle\Entity\Production
                post:
                    persistence:
                        model: Bkstg\NoticeBoardBundle\Entity\Post
